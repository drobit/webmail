name: testing

on:
  merge_group:
    types: [checks_requested]
  workflow_call:
  push:
    branches:
      - main
  pull_request:
    paths:
      - "Cargo.*"
      - "src/**"
      - "tests/**"

# Mock environment variables for testing - NOT real credentials
env:
  DATABASE_URL: "postgresql://test_user:test_pass@localhost:5432/test_db"
  SMTP_USER: "test@example.com"
  SMTP_PASS: "mock_app_password_16ch"
  IMAP_USER: "test@example.com"
  IMAP_PASS: "mock_app_password_16ch"

jobs:
  testing:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:13
        env:
          POSTGRES_USER: test_user
          POSTGRES_PASSWORD: test_pass
          POSTGRES_DB: test_db
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
      - uses: actions/checkout@v4

      - name: install cargo toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          profile: minimal

      # Run database setup
      - name: setup test database
        run: |
          sudo apt-get update
          sudo apt-get install -y postgresql-client
          PGPASSWORD=test_pass psql -h localhost -U test_user -d test_db -c "
            CREATE TABLE IF NOT EXISTS emails (
                id SERIAL PRIMARY KEY,
                message_id VARCHAR(255) UNIQUE,
                from_address TEXT NOT NULL,
                to_address TEXT NOT NULL,
                subject TEXT,
                body TEXT,
                created_at TIMESTAMP WITH TIME ZONE DEFAULT NOW(),
                fetched_at TIMESTAMP WITH TIME ZONE DEFAULT NOW(),
                is_seen BOOLEAN DEFAULT FALSE,
                is_recent BOOLEAN DEFAULT FALSE,
                imap_uid INTEGER,
                body_preview TEXT
            );
            CREATE TABLE IF NOT EXISTS sent_emails (
                id SERIAL PRIMARY KEY,
                to_address TEXT NOT NULL,
                subject TEXT,
                body TEXT,
                sent_at TIMESTAMP WITH TIME ZONE DEFAULT NOW(),
                status VARCHAR(50) DEFAULT 'sent'
            );
          "

      # Run library tests
      - run: cargo test --lib

      # Skip WASM tests for now since this is primarily a server application
      # - name: install wasm-pack
      #   run: curl https://rustwasm.github.io/wasm-pack/installer/init.sh -sSf | sh
      # - run: wasm-pack test --headless --firefox
      # - run: wasm-pack test --headless --chrome